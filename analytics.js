<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Å—á–µ—Ç—á–∏–∫</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f5f8fa;
            color: #333;
        }
        .container {
            background: white;
            border-radius: 10px;
            padding: 25px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }
        h1 {
            color: #2c3e50;
            text-align: center;
            margin-bottom: 30px;
        }
        .stats-panel {
            background: #2d3748;
            color: #e2e8f0;
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 25px;
        }
        .button {
            background: #3498db;
            color: white;
            border: none;
            padding: 12px 20px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            margin: 10px 5px;
            transition: background 0.3s;
        }
        .button:hover {
            background: #2980b9;
        }
        .button.whatsapp {
            background: #25D366;
        }
        .button.whatsapp:hover {
            background: #128C7E;
        }
        .debug-panel {
            background: #f8f9fa;
            border-left: 4px solid #3498db;
            padding: 15px;
            margin-top: 25px;
            font-family: monospace;
            font-size: 14px;
            max-height: 200px;
            overflow-y: auto;
        }
        .stat-value {
            font-weight: bold;
            font-size: 18px;
            color: #2c3e50;
        }
        .instructions {
            background: #e8f4fc;
            padding: 15px;
            border-radius: 5px;
            margin: 20px 0;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Å—á–µ—Ç—á–∏–∫</h1>
        
        <div class="instructions">
            <p><strong>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:</strong> –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–°–∏–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä" –∏–ª–∏ "–°–∏–º—É–ª–∏—Ä–æ–≤–∞—Ç—å WhatsApp". 
            –ó–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ "–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É" –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.</p>
            <p>–î–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ–±–∞–≤—å—Ç–µ <code>?admin=true</code> –∫ URL –≤ –∞–¥—Ä–µ—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ.</p>
        </div>
        
        <div class="stats-panel">
            <h2 style="color: #e2e8f0; margin-top: 0;">üìä –ü–∞–Ω–µ–ª—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏</h2>
            <div style="display: flex; justify-content: space-between; margin-bottom: 15px;">
                <div>
                    <span>üëÄ –ü—Ä–æ—Å–º–æ—Ç—Ä—ã:</span>
                    <span id="views-count" class="stat-value">0</span>
                </div>
                <div>
                    <span>üì± WhatsApp:</span>
                    <span id="whatsapp-count" class="stat-value">0</span>
                </div>
            </div>
            <div id="date-stats" style="font-size: 14px; color: #a0aec0; margin-bottom: 10px;">
                31 –∞–≤–≥—É—Å—Ç–∞ (–°–µ–≥–æ–¥–Ω—è)
            </div>
            <div id="last-update" style="font-size: 12px; color: #718096;">
                –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: --
            </div>
        </div>
        
        <div style="text-align: center;">
            <button id="simulate-view" class="button">–°–∏–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä</button>
            <button id="simulate-whatsapp" class="button whatsapp">–°–∏–º—É–ª–∏—Ä–æ–≤–∞—Ç—å WhatsApp</button>
            <button id="refresh-stats" class="button">–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É</button>
            <button id="reset-stats" class="button" style="background: #e74c3c;">–°–±—Ä–æ—Å–∏—Ç—å –¥–∞–Ω–Ω—ã–µ</button>
        </div>
        
        <div class="debug-panel">
            <h3>–ñ—É—Ä–Ω–∞–ª –æ—Ç–ª–∞–¥–∫–∏:</h3>
            <div id="debug-log"></div>
        </div>
    </div>

    <script>
        // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
        const CONFIG = {
            // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω –¥–æ–ª–∂–µ–Ω —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –±–µ–∑–æ–ø–∞—Å–Ω–æ
            // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º localStorage
            STORAGE_KEY: 'global-stats-data',
            UPDATE_INTERVAL: 3000,
            BADGE_ID: 'global-stats-badge'
        };

        // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
        const Utils = {
            formatDate: (date = new Date()) => date.toISOString().split('T')[0],
            addDays: (date, days) => {
                const result = new Date(date);
                result.setDate(result.getDate() + days);
                return result;
            },
            getYesterday: () => Utils.formatDate(Utils.addDays(new Date(), -1)),
            log: (message, type = 'info') => {
                const logElement = document.getElementById('debug-log');
                const timestamp = new Date().toLocaleTimeString();
                const logEntry = document.createElement('div');
                logEntry.innerHTML = `<span style="color: #777;">[${timestamp}]</span> ${message}`;
                
                if (type === 'error') {
                    logEntry.style.color = '#e74c3c';
                } else if (type === 'success') {
                    logEntry.style.color = '#27ae60';
                }
                
                logElement.appendChild(logEntry);
                logElement.scrollTop = logElement.scrollHeight;
            }
        };

        // –ú–µ–Ω–µ–¥–∂–µ—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç localStorage –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏)
        const StatsManager = {
            async get() {
                try {
                    const data = localStorage.getItem(CONFIG.STORAGE_KEY);
                    return data ? JSON.parse(data) : {};
                } catch (error) {
                    Utils.log(`–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: ${error.message}`, 'error');
                    return {};
                }
            },
            
            async save(data) {
                try {
                    localStorage.setItem(CONFIG.STORAGE_KEY, JSON.stringify(data));
                    Utils.log('–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã', 'success');
                    return true;
                } catch (error) {
                    Utils.log(`–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: ${error.message}`, 'error');
                    return false;
                }
            },
            
            async increment(type) {
                try {
                    const today = Utils.formatDate();
                    Utils.log(`–£–≤–µ–ª–∏—á–∏–≤–∞–µ–º ${type} –¥–ª—è –¥–∞—Ç—ã ${today}`);
                    
                    const data = await this.get();
                    
                    if (!data[today]) {
                        data[today] = { views: 0, whatsapp: 0 };
                    }
                    
                    data[today][type] = (data[today][type] || 0) + 1;
                    
                    const saveResult = await this.save(data);
                    if (saveResult) {
                        Utils.log(`–°—á–µ—Ç—á–∏–∫ ${type} —É–≤–µ–ª–∏—á–µ–Ω –¥–æ ${data[today][type]}`, 'success');
                    }
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º UI
                    this.updateUI(data);
                    
                    return saveResult;
                } catch (error) {
                    Utils.log(`–û—à–∏–±–∫–∞ —É–≤–µ–ª–∏—á–µ–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–∞: ${error.message}`, 'error');
                    return false;
                }
            },
            
            async updateUI(data = null) {
                try {
                    if (!data) {
                        data = await this.get();
                    }
                    
                    const today = Utils.formatDate();
                    const stats = data[today] || { views: 0, whatsapp: 0 };
                    
                    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
                    document.getElementById('views-count').textContent = stats.views;
                    document.getElementById('whatsapp-count').textContent = stats.whatsapp;
                    
                    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
                    const dateObj = new Date();
                    let dateLabel = dateObj.toLocaleDateString('ru-RU', { 
                        day: 'numeric', 
                        month: 'long' 
                    }) + ' (–°–µ–≥–æ–¥–Ω—è)';
                    
                    document.getElementById('date-stats').textContent = dateLabel;
                    document.getElementById('last-update').textContent = 
                        `–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ${dateObj.toLocaleTimeString()}`;
                        
                } catch (error) {
                    Utils.log(`–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI: ${error.message}`, 'error');
                }
            },
            
            async reset() {
                try {
                    localStorage.removeItem(CONFIG.STORAGE_KEY);
                    Utils.log('–î–∞–Ω–Ω—ã–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å–±—Ä–æ—à–µ–Ω—ã', 'success');
                    this.updateUI({});
                    return true;
                } catch (error) {
                    Utils.log(`–û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö: ${error.message}`, 'error');
                    return false;
                }
            }
        };

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        document.addEventListener('DOMContentLoaded', async function() {
            Utils.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏...');
            
            // –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—á–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
            await StatsManager.updateUI();
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∫–Ω–æ–ø–æ–∫
            document.getElementById('simulate-view').addEventListener('click', async () => {
                Utils.log('–°–∏–º—É–ª—è—Ü–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞...');
                await StatsManager.increment('views');
            });
            
            document.getElementById('simulate-whatsapp').addEventListener('click', async () => {
                Utils.log('–°–∏–º—É–ª—è—Ü–∏—è –∫–ª–∏–∫–∞ WhatsApp...');
                await StatsManager.increment('whatsapp');
            });
            
            document.getElementById('refresh-stats').addEventListener('click', async () => {
                Utils.log('–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...');
                await StatsManager.updateUI();
            });
            
            document.getElementById('reset-stats').addEventListener('click', async () => {
                Utils.log('–°–±—Ä–æ—Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...');
                await StatsManager.reset();
            });
            
            // –ò–º–∏—Ç–∞—Ü–∏—è –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
            await StatsManager.increment('views');
            
            Utils.log('–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ');
        });

        // –î–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –≤–∞—à–∏–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –∫–æ–¥–æ–º
        window.GlobalStats = {
            get: () => StatsManager.get(),
            track: (type) => StatsManager.increment(type),
            updateUI: () => StatsManager.updateUI()
        };
    </script>
</body>
</html>
